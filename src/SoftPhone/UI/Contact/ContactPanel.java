/*
 * This the MOINMOIN license
 * you can do that you want !!!!!!!!!
 */

/*
 * ContactPanel.java
 *
 * Created on 7 juin 2009, 21:27:57
 */

package SoftPhone.UI.Contact;

import SoftPhone.UI.Contact.ContactTable;
import SoftPhone.Contact.Contact;
import SoftPhone.Contact.ContactBook;
import SoftPhone.Protocol.Sip.SipUtils;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author didier
 */
public class ContactPanel extends javax.swing.JPanel {
    private Contact contact;
    private ContactBook contactBook;
    private ContactTable contactTable;
    private String action="ADD";

    /** Creates new form ContactPanel */
    public ContactPanel(ContactTable table,Contact c)
    {
        this.contactTable =table;
        this.contact =c;
        contactBook =(ContactBook) contactTable.getModel();
        initComponents();
    }

    public void setContact(Contact contact) {
        this.contact = contact;
        sipAddressField.setText(contact.getSipAddress());
        AliasField.setText(contact.getUsername());
    }

    public void setAction(String action)
    {
        this.action=action;
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AliasLabel = new javax.swing.JLabel();
        AliasField = new javax.swing.JTextField();
        sipAddressLabel = new javax.swing.JLabel();
        sipAddressField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();

        AliasLabel.setText("Alias : ");

        sipAddressLabel.setText("Adresse SIP : ");

        cancelButton.setText("Annuler");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonClicked(evt);
            }
        });

        OKButton.setText("Valider");
        OKButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OKButtonClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AliasLabel)
                    .addComponent(sipAddressLabel))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addGap(156, 156, 156)
                        .addComponent(OKButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sipAddressField)
                        .addComponent(AliasField, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AliasLabel)
                    .addComponent(AliasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sipAddressLabel)
                    .addComponent(sipAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(OKButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonClicked
       contactTable.cancelAddContact();
}//GEN-LAST:event_cancelButtonClicked

    private void OKButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKButtonClicked
        String contactAddress =sipAddressField.getText();
       if(action.equalsIgnoreCase("ADD")) validate(contactAddress);
       else if(action.equalsIgnoreCase("MODIFY"))update();
       else contactTable.cancelAddContact();
        
}//GEN-LAST:event_OKButtonClicked


    private void update()
    {
        String sipAddress =sipAddressField.getText();
        contact.setContactName(AliasField.getText());
         if(SipUtils.validateSipAddress(sipAddress))
         {
            contact.setSipAddress(sipAddress);
            contactBook.update();
            contactTable.update();
         }
         else
         {
            showBadSipMessage();
         }
    }

    private void validate(String sipAddress)
    {
         if(SipUtils.validateSipAddress(sipAddress))
         {
            try {
                Contact c = (Contact) contact.clone();
                c.setSipAddress(sipAddress);
                c.setContactName(AliasField.getText());
                contactBook.addContact(c);
                contactTable.update();
                sipAddressField.setText("");
                AliasField.setText("");
            } catch (CloneNotSupportedException ex) {
                Logger.getLogger(ContactPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
             
            
         }
                                            
         else
         {
             showBadSipMessage();
         }

    }
    private void showBadSipMessage()
    {
        JOptionPane.showMessageDialog(this
                     , "Saisissez une adresse SIP valide " +
                     "\n de la forme:sip:utilisateur@domain.fr"
                     ,"Adresse SIP invalide !"
                     ,JOptionPane.WARNING_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AliasField;
    private javax.swing.JLabel AliasLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField sipAddressField;
    private javax.swing.JLabel sipAddressLabel;
    // End of variables declaration//GEN-END:variables

}
