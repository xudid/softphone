/*
 * This the MOINMOIN license
 * you can do that you want !!!!!!!!!
 */

/*
 * SoftPhoneUI.java
 *
 * Created on 27 avr. 2009, 13:57:11
 */
/*TODO process invalid sip address done by sipcontactfield with a warning optionpane dialog */
package SoftPhone.UI;

import SoftPhone.UI.Contact.ContactField;
import SoftPhone.UI.Contact.ContactFieldTransferHandler;
import SoftPhone.UI.Contact.ContactTable;
import SoftPhone.Protocol.Sip.UserAgent.Event.NokResponseEvent;
import SoftPhone.Contact.ContactBook;
import SoftPhone.*;
import SoftPhone.Protocol.Sip.SipUtils;
import javax.sip.address.Address;
import javax.swing.JOptionPane;

/**
 *
 * @author didier
 */
public class SoftPhoneUI extends javax.swing.JFrame implements SoftPhoneListener
{

    
    private final SoftPhone softPhone;
    private final ContactBook contactBook;
    private ContactFieldTransferHandler th;

   
    public SoftPhoneUI(SoftPhone softPhone, ContactBook contactBook) {
        this.softPhone =softPhone;
        this.contactBook=contactBook;
       
        th=new ContactFieldTransferHandler();
        initComponents();
         this.callButton.setEnabled(true);
         this.holdButton.setEnabled(false);
         this.rejectButton.setEnabled(false);
         this.acceptButton.setEnabled(false);
         callLabel.setText("Hors Ligne");

        th.setContactField(contactField);
        softPhone.addListener(this);
        

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contactField = new ContactField(th);
        exitButton = new javax.swing.JButton();
        configureButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactTable = new ContactTable(contactBook);
        callButton = new javax.swing.JButton();
        holdButton = new javax.swing.JButton();
        callLabel = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        rejectButton = new javax.swing.JButton();
        registerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(" SoftPhone 0.3");

        contactField.setFont(new java.awt.Font("Tahoma", 1, 14));
        contactField.setText("sip:");
        contactField.setToolTipText("adresse sip du contact");

        exitButton.setText("Quitter");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        configureButton.setText("Configurer");
        configureButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configureButtonMouseClicked(evt);
            }
        });

        contactTable.setModel(contactBook);
        contactTable.setDragEnabled(true);
        jScrollPane1.setViewportView(contactTable);

        callButton.setText("Appeler");
        callButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callButtonActionPerformed(evt);
            }
        });

        holdButton.setText("Terminer");
        holdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        callLabel.setText("Hors Ligne");
        callLabel.setMaximumSize(new java.awt.Dimension(60, 17));
        callLabel.setMinimumSize(new java.awt.Dimension(60, 17));
        callLabel.setPreferredSize(new java.awt.Dimension(60, 17));

        acceptButton.setText("Accepter");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptCallActionPerformed(evt);
            }
        });

        rejectButton.setText("Refuser");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });

        registerLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        registerLabel.setText("non enregistr√©");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(callLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(configureButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)))
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(callButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(holdButton, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(acceptButton)
                            .addComponent(rejectButton)))
                    .addComponent(registerLabel)
                    .addComponent(exitButton))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(callButton)
                        .addComponent(acceptButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(callLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(holdButton)
                        .addComponent(rejectButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(registerLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(configureButton)
                            .addComponent(exitButton))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void callButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callButtonActionPerformed
       this.callButton.setEnabled(false);
       this.holdButton.setEnabled(true);
       this.rejectButton.setEnabled(false);
       this.acceptButton.setEnabled(false);
        validateCall(this.contactField.getText());

    }//GEN-LAST:event_callButtonActionPerformed

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
       softPhone.RejectIncommingCall("REFUSED");
    }//GEN-LAST:event_rejectButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        this.callButton.setEnabled(true);
       this.holdButton.setEnabled(false);
       this.rejectButton.setEnabled(false);
       this.acceptButton.setEnabled(false);
        callLabel.setText("Hors Ligne");
        softPhone.TerminateCall();
}//GEN-LAST:event_stopButtonActionPerformed

    private void acceptCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptCallActionPerformed
       this.callButton.setEnabled(false);
       this.holdButton.setEnabled(true);
       this.rejectButton.setEnabled(false);
       this.acceptButton.setEnabled(false);
       this.callLabel.setText("En ligne");
       Runnable r =new Runnable() {

            public void run() {
                softPhone.AcceptIncommingCall();
            }
        };
        Thread t =new Thread(r);
        t.start();
        
}//GEN-LAST:event_acceptCallActionPerformed

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
       System.exit(0);
    }//GEN-LAST:event_exitButtonMouseClicked

    private void configureButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configureButtonMouseClicked
        softPhone.showConf();
    }//GEN-LAST:event_configureButtonMouseClicked

                   
       
  
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton callButton;
    private javax.swing.JLabel callLabel;
    private javax.swing.JButton configureButton;
    private javax.swing.JTextField contactField;
    private javax.swing.JTable contactTable;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton holdButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JButton rejectButton;
    // End of variables declaration//GEN-END:variables


    private void validateCall(final String sipAddress)
    {
        if(SipUtils.validateSipAddress(sipAddress))
        {
            Runnable r=new Runnable() {

                public void run() {
                    softPhone.Call(sipAddress);
                }
            };
            Thread t =new Thread(r);
            t.start();
        }
        else
        {
           JOptionPane.showMessageDialog(this
                     , "Saisissez une adresse SIP valide " +
                     "\n de la forme:sip:utilisateur@domain.fr"
                     ,"Adresse SIP invalide !"
                     ,JOptionPane.WARNING_MESSAGE);
        }


    }
    public void processIncommingCall(InCallEvent ev) 
    {
       this.callButton.setEnabled(false);
       this.holdButton.setEnabled(false);
       this.rejectButton.setEnabled(true);
       this.acceptButton.setEnabled(true);
       callLabel.setText("Appel Entrant");
    }

    public void processCallTryResponse(TryCallEvent ev)
    {
       callLabel.setText("Essai de joindre votre correspondant");

    }

    public void processCallRingResponse(RingCallEvent ev)
    {
        callLabel.setText("Attente d'une r√©ponse de votre correspondant");
        
    }


    public void processCalloK(OKCallEvent ev)
    {
        callLabel.setText("En ligne");

    }

    public void processNokResponse(NokResponseEvent ev)
    {
        callLabel.setText(ev.getReason());
        
    }

    public void processRegisterOK(Address address)
    {
        registerLabel.setText("Enregistr√©");

    }

    public void processTerminateCallByRemotePart()
    {
        this.callButton.setEnabled(true);
       this.holdButton.setEnabled(false);
       this.rejectButton.setEnabled(false);
       this.acceptButton.setEnabled(false);
        callLabel.setText("Hors Ligne");
    }

    public void processCallInProgress()
    {
        callLabel.setText("Essai de joindre votre correspondant");
    }

    public void processCallNok()
    {
        this.callButton.setEnabled(true);
       this.holdButton.setEnabled(false);
       this.rejectButton.setEnabled(false);
       this.acceptButton.setEnabled(false);
        callLabel.setText("Hors Ligne");

    }


         }
